<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-29T17:37:56 IST" name="Suite" finished-at="2024-01-29T17:38:38 IST" duration-ms="42195">
    <groups>
    </groups>
    <test started-at="2024-01-29T17:37:56 IST" name="Test" finished-at="2024-01-29T17:38:38 IST" duration-ms="42195">
      <class name="tests.commercial_Builcing_PageTest">
        <test-method is-config="true" signature="before_login()[pri:0, instance:tests.commercial_Builcing_PageTest@1e1a0406]" started-at="2024-01-29T17:37:56 IST" name="before_login" finished-at="2024-01-29T17:38:00 IST" duration-ms="3937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_login -->
        <test-method is-config="true" signature="before_NewPolicy()[pri:0, instance:tests.commercial_Builcing_PageTest@1e1a0406]" started-at="2024-01-29T17:38:00 IST" name="before_NewPolicy" finished-at="2024-01-29T17:38:00 IST" depends-on-methods="tests.dashboardTest.before_dashboard, tests.LoginTest.before_login" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_NewPolicy -->
        <test-method is-config="true" signature="before_dashboard()[pri:0, instance:tests.commercial_Builcing_PageTest@1e1a0406]" started-at="2024-01-29T17:38:00 IST" name="before_dashboard" finished-at="2024-01-29T17:38:00 IST" depends-on-methods="tests.LoginTest.before_login" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_dashboard -->
        <test-method is-config="true" signature="before_newApplication()[pri:0, instance:tests.commercial_Builcing_PageTest@1e1a0406]" started-at="2024-01-29T17:38:00 IST" name="before_newApplication" finished-at="2024-01-29T17:38:00 IST" depends-on-methods="tests.Create_NewPolicyHolderTest.before_NewPolicy, tests.dashboardTest.before_dashboard, tests.LoginTest.before_login" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_newApplication -->
        <test-method is-config="true" signature="before_exposure()[pri:0, instance:tests.commercial_Builcing_PageTest@1e1a0406]" started-at="2024-01-29T17:38:00 IST" name="before_exposure" finished-at="2024-01-29T17:38:00 IST" depends-on-methods="tests.Create_NewApplicationTest.before_newApplication, tests.Create_NewPolicyHolderTest.before_NewPolicy, tests.dashboardTest.before_dashboard, tests.LoginTest.before_login" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_exposure -->
        <test-method is-config="true" signature="before_Commercial_building()[pri:0, instance:tests.commercial_Builcing_PageTest@1e1a0406]" started-at="2024-01-29T17:38:00 IST" name="before_Commercial_building" finished-at="2024-01-29T17:38:00 IST" depends-on-methods="tests.exposures_PageTest.before_exposure, tests.Create_NewApplicationTest.before_newApplication, tests.Create_NewPolicyHolderTest.before_NewPolicy, tests.dashboardTest.before_dashboard, tests.LoginTest.before_login" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before_Commercial_building -->
        <test-method signature="login_details(java.lang.String,java.lang.String)[pri:0, instance:tests.commercial_Builcing_PageTest@1e1a0406]" started-at="2024-01-29T17:38:00 IST" name="login_details" finished-at="2024-01-29T17:38:00 IST" duration-ms="469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[alice.lee]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[socotra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_details -->
        <test-method signature="dashboard()[pri:0, instance:tests.commercial_Builcing_PageTest@1e1a0406]" started-at="2024-01-29T17:38:00 IST" name="dashboard" finished-at="2024-01-29T17:38:09 IST" depends-on-methods="tests.LoginTest.login_details" duration-ms="9006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dashboard -->
        <test-method signature="create_newPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.commercial_Builcing_PageTest@1e1a0406]" started-at="2024-01-29T17:38:09 IST" name="create_newPolicy" finished-at="2024-01-29T17:38:13 IST" depends-on-methods="tests.dashboardTest.dashboard" duration-ms="3647" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Scenario1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2009/01/01]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Male]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Business Professional]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Married]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_newPolicy -->
        <test-method signature="newApplication(java.lang.String)[pri:0, instance:tests.commercial_Builcing_PageTest@1e1a0406]" started-at="2024-01-29T17:38:13 IST" name="newApplication" finished-at="2024-01-29T17:38:19 IST" depends-on-methods="tests.Create_NewPolicyHolderTest.create_newPolicy" duration-ms="6079" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Commercial Property Location]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newApplication -->
        <test-method signature="exposure(java.lang.String)[pri:0, instance:tests.commercial_Builcing_PageTest@1e1a0406]" started-at="2024-01-29T17:38:19 IST" name="exposure" finished-at="2024-01-29T17:38:29 IST" depends-on-methods="tests.Create_NewApplicationTest.newApplication" duration-ms="10377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Commercial Building]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exposure -->
        <test-method signature="commercial_Building(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.commercial_Builcing_PageTest@1e1a0406]" started-at="2024-01-29T17:38:29 IST" name="commercial_Building" finished-at="2024-01-29T17:38:38 IST" depends-on-methods="tests.exposures_PageTest.exposure" duration-ms="8632" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[LOC 001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BLDG 001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[101 Boulder St]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Test Address2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[95959]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Individual]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Accounting Services]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1220]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Office Low Rise]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[1951]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[1951-2000]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Light Non-Combustible]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[No]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[2500]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[No]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[<400 Feet]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[2-5]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[Owner]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commercial_Building -->
      </class> <!-- tests.commercial_Builcing_PageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
